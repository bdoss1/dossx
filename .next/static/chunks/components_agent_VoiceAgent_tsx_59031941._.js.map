{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/barondoss/Dev/dossx-latest/components/agent/VoiceAgent.tsx"],"sourcesContent":["// components/agent/VoiceAgent.tsx\n\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\n\nexport default function VoiceAgent() {\n  const agentId = process.env.NEXT_PUBLIC_ELEVENLABS_AGENT_ID;\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const [ready, setReady] = useState(false);\n\n  useEffect(() => {\n    // Guard: need an agent id\n    if (!agentId) return;\n\n    // If script already present, just render the element\n    const existing = document.querySelector<HTMLScriptElement>(\n      'script[src=\"https://elevenlabs.io/convai-widget/index.js\"]'\n    );\n\n    const ensureElement = () => {\n      if (!containerRef.current) return;\n\n      // Remove prior element if hot-reloading\n      containerRef.current.innerHTML = \"\";\n\n      // Create the custom element for the widget\n      const el = document.createElement(\"elevenlabs-convai\");\n      el.setAttribute(\"agent-id\", agentId);\n      containerRef.current.appendChild(el);\n      setReady(true);\n    };\n\n    if (existing) {\n      ensureElement();\n      return;\n    }\n\n    // Inject the script once\n    const s = document.createElement(\"script\");\n    s.src = \"https://elevenlabs.io/convai-widget/index.js\";\n    s.async = true;\n    s.type = \"text/javascript\";\n    s.onload = ensureElement;\n    s.onerror = () => console.error(\"Failed to load ElevenLabs ConvAI script\");\n    document.body.appendChild(s);\n\n    return () => {\n      // optional cleanup: don’t remove script, but clear the container\n      if (containerRef.current) containerRef.current.innerHTML = \"\";\n    };\n  }, [agentId]);\n\n  return (\n    <section className=\"py-16 text-white\">\n      <div className=\"container mx-auto px-6 text-center\">\n        <h2 className=\"text-3xl font-bold mb-4\">Meet Your AI Voice Agent</h2>\n        <p className=\"text-gray-400 mb-6\">\n          Powered by DossX & OpenAI — answers questions, books meetings, and more.\n        </p>\n\n        {!agentId ? (\n          <div className=\"text-red-400 font-semibold\">\n            Missing NEXT_PUBLIC_ELEVENLABS_AGENT_ID in your env.\n          </div>\n        ) : (\n          <div ref={containerRef} />\n        )}\n\n        {!ready && agentId && (\n          <p className=\"text-sm text-gray-500 mt-4\">Loading voice widget…</p>\n        )}\n      </div>\n    </section>\n  );\n}"],"names":[],"mappings":"AAAA,kCAAkC;;;;AAMhB;;AAHlB;;;AAFA;;AAIe,SAAS;;IACtB,MAAM;IACN,MAAM,eAAe,CAAA,GAAA,iTAAA,CAAA,SAAM,AAAD,EAAyB;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,iTAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,iTAAA,CAAA,YAAS,AAAD;gCAAE;YACR,0BAA0B;YAC1B,uCAAc;;YAAM;YAEpB,qDAAqD;YACrD,MAAM,WAAW,SAAS,aAAa,CACrC;YAGF,MAAM;sDAAgB;oBACpB,IAAI,CAAC,aAAa,OAAO,EAAE;oBAE3B,wCAAwC;oBACxC,aAAa,OAAO,CAAC,SAAS,GAAG;oBAEjC,2CAA2C;oBAC3C,MAAM,KAAK,SAAS,aAAa,CAAC;oBAClC,GAAG,YAAY,CAAC,YAAY;oBAC5B,aAAa,OAAO,CAAC,WAAW,CAAC;oBACjC,SAAS;gBACX;;YAEA,IAAI,UAAU;gBACZ;gBACA;YACF;YAEA,yBAAyB;YACzB,MAAM,IAAI,SAAS,aAAa,CAAC;YACjC,EAAE,GAAG,GAAG;YACR,EAAE,KAAK,GAAG;YACV,EAAE,IAAI,GAAG;YACT,EAAE,MAAM,GAAG;YACX,EAAE,OAAO;wCAAG,IAAM,QAAQ,KAAK,CAAC;;YAChC,SAAS,IAAI,CAAC,WAAW,CAAC;YAE1B;wCAAO;oBACL,iEAAiE;oBACjE,IAAI,aAAa,OAAO,EAAE,aAAa,OAAO,CAAC,SAAS,GAAG;gBAC7D;;QACF;+BAAG;QAAC;KAAQ;IAEZ,qBACE,iVAAC;QAAQ,WAAU;kBACjB,cAAA,iVAAC;YAAI,WAAU;;8BACb,iVAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,iVAAC;oBAAE,WAAU;8BAAqB;;;;;;gBAIjC,2FAKC,iVAAC;oBAAI,KAAK;;;;;;gBAGX,CAAC,SAAS,yBACT,iVAAC;oBAAE,WAAU;8BAA6B;;;;;;;;;;;;;;;;;AAKpD;GArEwB;KAAA","debugId":null}}]
}