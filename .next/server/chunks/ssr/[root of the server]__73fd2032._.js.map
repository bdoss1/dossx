{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/barondoss/Dev/dossx-latest/components/animation/CursorPointer.tsx"],"sourcesContent":["'use client'\nimport { useGSAP } from '@gsap/react'\nimport gsap from 'gsap'\nimport { useEffect, useState } from 'react'\n\nconst CursorPointer = () => {\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0,\n  })\n\n  useGSAP(() => {\n    if (window.innerWidth >= 1023) {\n      gsap.to('.pointer', {\n        x: mousePosition.x,\n        y: mousePosition.y,\n        height: '14px',\n        width: '14px',\n      })\n    }\n  }, [mousePosition])\n\n  useEffect(() => {\n    const moseMove = (e: any) => {\n      setMousePosition({\n        x: e.clientX,\n        y: e.clientY,\n      })\n    }\n    window.addEventListener('mousemove', moseMove)\n    window.addEventListener('keydown', moseMove)\n  }, [])\n\n  return <div className=\"pointer\"></div>\n}\n\nexport default CursorPointer\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKA,MAAM,gBAAgB;IACpB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjD,GAAG;QACH,GAAG;IACL;IAEA,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD,EAAE;QACN,IAAI,OAAO,UAAU,IAAI,MAAM;YAC7B,6IAAA,CAAA,UAAI,CAAC,EAAE,CAAC,YAAY;gBAClB,GAAG,cAAc,CAAC;gBAClB,GAAG,cAAc,CAAC;gBAClB,QAAQ;gBACR,OAAO;YACT;QACF;IACF,GAAG;QAAC;KAAc;IAElB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,CAAC;YAChB,iBAAiB;gBACf,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,OAAO;YACd;QACF;QACA,OAAO,gBAAgB,CAAC,aAAa;QACrC,OAAO,gBAAgB,CAAC,WAAW;IACrC,GAAG,EAAE;IAEL,qBAAO,8OAAC;QAAI,WAAU;;;;;;AACxB;uCAEe","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/barondoss/Dev/dossx-latest/components/shared/SmoothScroll.tsx"],"sourcesContent":["'use client'\nimport { ReactLenis, useLenis } from 'lenis/react'\nimport { usePathname, useSearchParams } from 'next/navigation'\nimport { ReactNode, useEffect } from 'react'\n\ninterface SmoothScrollingProps {\n  children: ReactNode\n}\n\nconst SmoothScrollProvider = ({ children }: Readonly<SmoothScrollingProps>) => {\n  const pathname = usePathname()\n  const searchParams = useSearchParams()\n\n  const lenis = useLenis()\n\n  useEffect(() => {\n    lenis?.scrollTo(0, { immediate: true })\n  }, [pathname, searchParams, lenis])\n\n  useEffect(() => {\n    if (!lenis) return\n\n    const handleClick = (ele: Element) => {\n      lenis.scrollTo(ele.getAttribute('href') ?? '', {\n        offset: -100,\n      })\n    }\n\n    const elements = document.querySelectorAll('.lenis-scroll-to')\n    const clickHandler = (e: Event) => handleClick(e.target as Element)\n\n    elements.forEach((ele) => {\n      ele.addEventListener('click', clickHandler)\n    })\n\n    return () => {\n      elements.forEach((ele) => {\n        ele.removeEventListener('click', clickHandler)\n      })\n    }\n  }, [lenis, pathname])\n\n  return (\n    <ReactLenis root options={{ duration: 1.1 }}>\n      {children}\n    </ReactLenis>\n  )\n}\n\nexport default SmoothScrollProvider\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AASA,MAAM,uBAAuB,CAAC,EAAE,QAAQ,EAAkC;IACxE,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAEnC,MAAM,QAAQ,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAErB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,OAAO,SAAS,GAAG;YAAE,WAAW;QAAK;IACvC,GAAG;QAAC;QAAU;QAAc;KAAM;IAElC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO;QAEZ,MAAM,cAAc,CAAC;YACnB,MAAM,QAAQ,CAAC,IAAI,YAAY,CAAC,WAAW,IAAI;gBAC7C,QAAQ,CAAC;YACX;QACF;QAEA,MAAM,WAAW,SAAS,gBAAgB,CAAC;QAC3C,MAAM,eAAe,CAAC,IAAa,YAAY,EAAE,MAAM;QAEvD,SAAS,OAAO,CAAC,CAAC;YAChB,IAAI,gBAAgB,CAAC,SAAS;QAChC;QAEA,OAAO;YACL,SAAS,OAAO,CAAC,CAAC;gBAChB,IAAI,mBAAmB,CAAC,SAAS;YACnC;QACF;IACF,GAAG;QAAC;QAAO;KAAS;IAEpB,qBACE,8OAAC,gJAAA,CAAA,aAAU;QAAC,IAAI;QAAC,SAAS;YAAE,UAAU;QAAI;kBACvC;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/barondoss/Dev/dossx-latest/utils/Providers.tsx"],"sourcesContent":["'use client'\nimport { ThemeProvider as NextThemesProvider, ThemeProviderProps } from 'next-themes'\nimport { useEffect, useState } from 'react'\n\nexport function ThemeModeProvider({ children, ...props }: Readonly<ThemeProviderProps>) {\n  const [mount, setMount] = useState(false)\n\n  useEffect(() => {\n    setMount(true)\n\n    return () => {\n      setMount(false)\n    }\n  }, [])\n\n  if (!mount) return null\n\n  return (\n    <NextThemesProvider attribute=\"class\" defaultTheme=\"dark\" forcedTheme=\"dark\" {...props}>\n      {children}\n    </NextThemesProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIO,SAAS,kBAAkB,EAAE,QAAQ,EAAE,GAAG,OAAqC;IACpF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS;QAET,OAAO;YACL,SAAS;QACX;IACF,GAAG,EAAE;IAEL,IAAI,CAAC,OAAO,OAAO;IAEnB,qBACE,8OAAC,gJAAA,CAAA,gBAAkB;QAAC,WAAU;QAAQ,cAAa;QAAO,aAAY;QAAQ,GAAG,KAAK;kBACnF;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}