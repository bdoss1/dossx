{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/barondoss/Dev/dossx-latest/app/api/checkout/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport Stripe from \"stripe\";\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n  apiVersion: \"2024-06-20\",\n});\n\ntype ProductKey = \"voice\" | \"sales\" | \"data\";\ntype TierKey = \"starter\" | \"growth\" | \"pro\";\n\nconst RECURRING_PRICE: Record<ProductKey, Record<TierKey, string>> = {\n  voice: {\n    starter: process.env.VOICE_STARTER_PRICE!,\n    growth: process.env.VOICE_GROWTH_PRICE!,\n    pro: process.env.VOICE_PRO_PRICE!,\n  },\n  sales: {\n    starter: process.env.SALES_STARTER_PRICE!,\n    growth: process.env.SALES_GROWTH_PRICE!,\n    pro: process.env.SALES_PRO_PRICE!,\n  },\n  data: {\n    starter: process.env.DATA_STARTER_PRICE!,\n    growth: process.env.DATA_GROWTH_PRICE!,\n    pro: process.env.DATA_PRO_PRICE!,\n  },\n};\n\nconst SETUP_PRICE: Record<ProductKey, string> = {\n  voice: process.env.VOICE_SETUP_PRICE!, // one-time\n  sales: process.env.SALES_SETUP_PRICE!, // one-time\n  data:  process.env.DATA_SETUP_PRICE!,  // one-time\n};\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { product, tier, orgId, email } = (await req.json()) as {\n      product: ProductKey;\n      tier: TierKey;\n      orgId?: string;\n      email?: string;\n    };\n\n    const recurring = RECURRING_PRICE[product]?.[tier];\n    const setup = SETUP_PRICE[product];\n\n    if (!recurring || !setup) {\n      return NextResponse.json(\n        { error: \"Invalid product/tier or missing Stripe price IDs.\" },\n        { status: 400 }\n      );\n    }\n\n    const appUrl = process.env.NEXT_PUBLIC_APP_URL || \"http://localhost:3000\";\n\n    const session = await stripe.checkout.sessions.create({\n      mode: \"subscription\",\n      line_items: [\n        { price: recurring, quantity: 1 }, // subscription\n        { price: setup, quantity: 1 },     // one-time setup fee\n      ],\n      success_url: `${appUrl}/success?session_id={CHECKOUT_SESSION_ID}`,\n      cancel_url: `${appUrl}/pricing?canceled=1`,\n      allow_promotion_codes: true,\n      customer_email: email,\n      subscription_data: {\n        metadata: { product, tier, orgId: orgId || \"\" },\n      },\n      metadata: { product, tier, orgId: orgId || \"\", includes_setup_fee: \"true\" },\n      // optional: automatic_tax: { enabled: true },\n    });\n\n    return NextResponse.json({ url: session.url }, { status: 200 });\n  } catch (err: any) {\n    console.error(\"Checkout error:\", err);\n    return NextResponse.json({ error: err?.message || \"Checkout failed\" }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,+OAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,CAAC,iBAAiB,EAAG;IACxD,YAAY;AACd;AAKA,MAAM,kBAA+D;IACnE,OAAO;QACL,SAAS,QAAQ,GAAG,CAAC,mBAAmB;QACxC,QAAQ,QAAQ,GAAG,CAAC,kBAAkB;QACtC,KAAK,QAAQ,GAAG,CAAC,eAAe;IAClC;IACA,OAAO;QACL,SAAS,QAAQ,GAAG,CAAC,mBAAmB;QACxC,QAAQ,QAAQ,GAAG,CAAC,kBAAkB;QACtC,KAAK,QAAQ,GAAG,CAAC,eAAe;IAClC;IACA,MAAM;QACJ,SAAS,QAAQ,GAAG,CAAC,kBAAkB;QACvC,QAAQ,QAAQ,GAAG,CAAC,iBAAiB;QACrC,KAAK,QAAQ,GAAG,CAAC,cAAc;IACjC;AACF;AAEA,MAAM,cAA0C;IAC9C,OAAO,QAAQ,GAAG,CAAC,iBAAiB;IACpC,OAAO,QAAQ,GAAG,CAAC,iBAAiB;IACpC,MAAO,QAAQ,GAAG,CAAC,gBAAgB;AACrC;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAI,MAAM,IAAI,IAAI;QAOvD,MAAM,YAAY,eAAe,CAAC,QAAQ,EAAE,CAAC,KAAK;QAClD,MAAM,QAAQ,WAAW,CAAC,QAAQ;QAElC,IAAI,CAAC,aAAa,CAAC,OAAO;YACxB,OAAO,oRAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAoD,GAC7D;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,yDAAmC;QAElD,MAAM,UAAU,MAAM,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;YACpD,MAAM;YACN,YAAY;gBACV;oBAAE,OAAO;oBAAW,UAAU;gBAAE;gBAChC;oBAAE,OAAO;oBAAO,UAAU;gBAAE;aAC7B;YACD,aAAa,GAAG,OAAO,yCAAyC,CAAC;YACjE,YAAY,GAAG,OAAO,mBAAmB,CAAC;YAC1C,uBAAuB;YACvB,gBAAgB;YAChB,mBAAmB;gBACjB,UAAU;oBAAE;oBAAS;oBAAM,OAAO,SAAS;gBAAG;YAChD;YACA,UAAU;gBAAE;gBAAS;gBAAM,OAAO,SAAS;gBAAI,oBAAoB;YAAO;QAE5E;QAEA,OAAO,oRAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,KAAK,QAAQ,GAAG;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC/D,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,oRAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,KAAK,WAAW;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACvF;AACF","debugId":null}}]
}